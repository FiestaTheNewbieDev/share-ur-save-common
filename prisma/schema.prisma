generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  @@map("user")

  uuid String @id @default(uuid())

  username String @unique
  displayName String? @map("display_name")
  email String @unique
  password String?
  pictureUrl String? @map("picture_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  saves Save[]
  saveUpvotes SaveUpvote[]
  userRoles UserRole[]
}

model UserRole {
  @@map("user_role")

  userUuid String @map("user_uuid")
  roleId String @map("role_id")

  assignedAt DateTime @default(now()) @map("assigned_at")

  user User @relation(fields: [userUuid], references: [uuid])
  role Role @relation(fields: [roleId], references: [id])

  @@id([userUuid, roleId])
}

model Role {
  @@map("role")

  id String @id
  name String @unique

  userRoles UserRole[]
}

model Game {
  @@map("game")

  uuid String @id @default(uuid())
  rawgId Int @unique @map("rawg_id")
  slug String @unique

  name String
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  saves Save[]
}

model Save {
  @@map("save")

  uuid String @id @default(uuid())
  authorUuid String @map("author_uuid")
  gameUuid String @map("game_uuid")
  
  title String
  description String?
  downloadUrl String @map("download_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  author User @relation(fields: [authorUuid], references: [uuid])
  game Game @relation(fields: [gameUuid], references: [uuid])
  saveUpvotes SaveUpvote[]
}

enum Upvote {
  UP
  DOWN
}

model SaveUpvote {
  @@map("save_upvote")

  userUuid String @map("user_uuid")
  saveUuid String @map("save_uuid")

  type Upvote

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userUuid], references: [uuid])
  save Save @relation(fields: [saveUuid], references: [uuid])

  @@id([userUuid, saveUuid])
}
